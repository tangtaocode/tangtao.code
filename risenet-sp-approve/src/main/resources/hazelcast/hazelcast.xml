<hazelcast xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.hazelcast.com/schema/config"
    xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-3.6.xsd">

	<group>
        <name>riserc8_platform</name>
        <password>riserc8_platform</password>
    </group>
    
    <management-center enabled="false">http://localhost:8080/mancenter</management-center>
    
    <network>
    	<port auto-increment="true" port-count="10">7710</port>
        <join>
            <multicast enabled="false"/>
            <tcp-ip enabled="true">
                <member-list>
                    <member>127.0.0.1:7710</member>
                </member-list>
            </tcp-ip>
        </join>
    </network>
    
    <map name="ac*">
        <in-memory-format>BINARY</in-memory-format>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>3000</time-to-live-seconds>
        <max-idle-seconds>600</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">0</max-size>
        <eviction-percentage>25</eviction-percentage>
        <min-eviction-check-millis>100</min-eviction-check-millis>
        <merge-policy>com.hazelcast.map.merge.PutIfAbsentMapMergePolicy</merge-policy>
        <cache-deserialized-values>INDEX-ONLY</cache-deserialized-values>
    </map>
    <map name="org*">
        <in-memory-format>BINARY</in-memory-format>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>3000</time-to-live-seconds>
        <max-idle-seconds>600</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">0</max-size>
        <eviction-percentage>25</eviction-percentage>
        <min-eviction-check-millis>100</min-eviction-check-millis>
        <merge-policy>com.hazelcast.map.merge.PutIfAbsentMapMergePolicy</merge-policy>
        <cache-deserialized-values>INDEX-ONLY</cache-deserialized-values>
    </map>
    
    <map name="httpServletSessionMap">
        <in-memory-format>BINARY</in-memory-format>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>3000</time-to-live-seconds>
        <max-idle-seconds>600</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="PER_NODE">0</max-size>
        <eviction-percentage>25</eviction-percentage>
        <min-eviction-check-millis>100</min-eviction-check-millis>
        <merge-policy>com.hazelcast.map.merge.PutIfAbsentMapMergePolicy</merge-policy>
        <cache-deserialized-values>INDEX-ONLY</cache-deserialized-values>
    </map>
			
    <ringbuffer name="risers8_org_event">
        <capacity>10000</capacity>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>0</time-to-live-seconds>
        <in-memory-format>BINARY</in-memory-format>
    </ringbuffer>

    <reliable-topic name="risers8_org_event">
    	<!-- Policy to handle an overloaded topic. Available values are `DISCARD_OLDEST`, `DISCARD_NEWEST`, `BLOCK` and `ERROR`. The default value is `BLOCK. -->
        <topic-overload-policy>DISCARD_OLDEST</topic-overload-policy>
        <read-batch-size>10</read-batch-size>
        <statistics-enabled>true</statistics-enabled>
        <!-- <message-listeners>
        	<message-listener>net.risesoft.api.pubsub.sub.imp.hazelcast.RiseOrgEventListener</message-listener>
        </message-listeners> -->
    </reliable-topic>
    
    <ringbuffer name="risers8_common_event">
        <capacity>10000</capacity>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>0</time-to-live-seconds>
        <in-memory-format>BINARY</in-memory-format>
    </ringbuffer>

    <reliable-topic name="risers8_common_event">
    	<!-- Policy to handle an overloaded topic. Available values are `DISCARD_OLDEST`, `DISCARD_NEWEST`, `BLOCK` and `ERROR`. The default value is `BLOCK. -->
        <topic-overload-policy>DISCARD_OLDEST</topic-overload-policy>
        <read-batch-size>10</read-batch-size>
        <statistics-enabled>true</statistics-enabled>
    </reliable-topic>
    
</hazelcast>
