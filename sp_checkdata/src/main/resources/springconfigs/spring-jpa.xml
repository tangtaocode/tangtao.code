<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">
	<context:property-placeholder ignore-unresolvable="true" location="classpath*:properties/application.properties" />

    <!--  在tomcat中需要加前缀：java:comp/env/，在weblogic中不需要加前缀。 -->
    <!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/riseDataSource" resource-ref="true" /> -->
    
	<!-- 数据源配置, 使用DBCP数据库连接池 -->
	<bean id="xzspDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${xzsp.jdbc.url}" />
		<property name="username" value="${xzsp.jdbc.username}" />
		<property name="password" value="${xzsp.jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="homeDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${home.jdbc.url}" />
		<property name="username" value="${home.jdbc.username}" />
		<property name="password" value="${home.jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="dataSource" class="net.risesoft.annotation.DynamicDataSource">
     <!-- 通过key-value的形式来关联数据源 -->
          <property name="targetDataSources">
                  <map key-type="java.lang.String">
                          <entry value-ref="xzspDataSource" key="xzspDataSource"></entry>
                          <entry value-ref="homeDataSource" key="homeDataSource"></entry>
                  </map>
          </property>
          <property name="defaultTargetDataSource" ref="xzspDataSource" ></property>
        </bean>
	
	<!-- <bean id="dataSource" class="net.sf.log4jdbc.sql.jdbcapi.DataSourceSpy" depends-on="systemproperty_initializer">
		<constructor-arg ref="dataSourceReal" />
	</bean> -->
	
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true" />
    
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="packagesToScan" value="net.risesoft.entity.jpa"/> -->
		<property name="packagesToScan">
			<list>
				<value>net.risesoft.model</value>
			</list>
		</property>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.DefaultNamingStrategy</prop>
				<prop key="hibernate.default_schema">${jdbc.schema}</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<!-- 
				     validate 加载hibernate时，验证创建数据库表结构
				     create 每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。 
					 none 
					 create-drop 加载hibernate时创建，退出时删除表结构
					 update 加载hibernate自动更新数据库结构
			     -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.jdbc.batch_size">100</prop>				
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<!-- Spring Data Jpa配置 -->
	<jpa:repositories base-package="net.risesoft.service,net.risesoft.dao"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

<!-- 配置数据库注解aop -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="manyDataSourceAspect" class="net.risesoft.annotation.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="c" ref="manyDataSourceAspect">
            <aop:pointcut id="tx" expression="execution(* net.risesoft.service.*.*(..))"/>
            <aop:before pointcut-ref="tx" method="before"/>
        </aop:aspect>
    </aop:config>
    <!-- 配置数据库注解aop -->

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>
</beans>